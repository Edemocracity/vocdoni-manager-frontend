# BASE
# https://docs.gitlab.com/ce/ci/docker/using_docker_build.html#container-registry-examples

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  # MANAGER_BRANCH_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  MANAGER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}:latest

###############################################################################
## ENTITY MANAGER DOCKER
###############################################################################

manager-build:
  image: node:12
  stage: build
  script:
    - npm install
    - npm run export
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - build/
  except:
    - release

manager-docker-release:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - docker build --pull -t ${MANAGER_RELEASE_IMAGE} --build-arg "BOOTNODES_URL_READ_ONLY=$BOOTNODES_URL_READ_ONLY" --build-arg "ETH_NETWORK_ID=$ETH_NETWORK_ID" -f Dockerfile .
    - docker push ${MANAGER_RELEASE_IMAGE}
  only:
    changes:
      - components/**/*
      - i18n/**/*
      - lib/**/*
      - pages/**/*
      - public/**/*
      - styles/**/*
      - Dockerfile
      - .dockerignore
      - .gitlab-ci.yml
      - env-config.js
      - next.config.js
      - package-lock.json
      - package.json
      - tsconfig.json
    refs:
      - release



## DEPRECATED

dev-deploy:
  image: alpine:3.7
  stage: deploy
  script:
    - apk add curl
    - curl ${DEV_WWW_UPGRADE_WEBHOOK}
  only:
    refs:
      - master

prod-deploy:
  image: alpine:3.7
  stage: deploy
  script:
    - apk add curl
    - curl ${PROD_WWW_UPGRADE_WEBHOOK}
  only:
    refs:
      - release


## PREVIEW

# pages:
#   stage: preview
#   image: alpine:latest
#   environment: staging
#   script:
#   - cp -a ./build ./public
#   artifacts:
#     paths:
#     - public
#   except:
#   - master

# review:
#   stage: deploy
#   image: alpine:latest
#   script:
#     - echo "Deploy to review server"
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     # url: https://$CI_ENVIRONMENT_SLUG.example.com/
#   except:
#   - master

## DELIVERY

# variables:
#   S3_BUCKET_NAME: "yourbucket"

# deploy to production:
#   environment: production
#   image: python:latest
#   script:
#   - pip install awscli
#   - aws s3 cp ./ s3://$S3_BUCKET_NAME/ --recursive --exclude "*" --include "*.html"
#   only:
#   - master
